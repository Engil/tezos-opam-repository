stages:
  - lint
  - build
  - publish

# Match GitLab executors version and directly use the Docker socket
# The Docker daemon is already configured, experimental features are enabled
# The following environment variables are already set:
# - BUILDKIT_PROGRESS
# - DOCKER_DRIVER
# - DOCKER_VERSION
# https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-socket-binding
.image_template__docker:
  image: docker:20.10.12

# the build template is used by all build jobs
# The use the variable IMAGE_ARCH_PREFIX that is then used when merging
# the docker images in one manifesto
.build-template: &build-definition
  stage: build
  extends:
    - .image_template__docker
  variables:
    IMAGE_ARCH_PREFIX: ""
  script:
    - . ./scripts/version.sh
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - ./scripts/create_docker_image.sh "${CI_REGISTRY_IMAGE}" "${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}" "${ARCH}"
    # push
    - docker push "${CI_REGISTRY_IMAGE}:runtime-dependencies--${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}"
    - docker push "${CI_REGISTRY_IMAGE}:runtime-prebuild-dependencies--${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}"
    - docker push "${CI_REGISTRY_IMAGE}:runtime-build-dependencies--${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}"
    - docker push "${CI_REGISTRY_IMAGE}:runtime-build-test-dependencies--${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}"

# this step checks that all docker spec files using the tool hadolint
docker-hadolint:
  image: hadolint/hadolint:2.9.3-debian
  stage: lint
  script:
    - hadolint runtime-dependencies.Dockerfile
    - hadolint runtime-prebuild-dependencies.Dockerfile
    - hadolint runtime-build-dependencies.Dockerfile
    - hadolint runtime-build-test-dependencies.Dockerfile

# this step checks that all scripts pass shellcheck
shellcheck:
  image: koalaman/shellcheck-alpine:v0.7.1
  stage: lint
  script:
    - shellcheck -x scripts/*.sh

# this job builds the build docker images for amd64
build-amd64:
  <<: *build-definition
  variables:
    ARCH: "x86_64" # variable used to build static packages
    IMAGE_ARCH_PREFIX: "amd64--"
  only:
    - //@tezos/opam-repository
    - //@nomadic-labs/opam-repository

# this job builds the build docker images for arm64
# but the job is restricted to nomadic labs and arm64
# it is used for development
build-arm64:
  <<: *build-definition
  variables:
    ARCH: "aarch64" # variable used to build static packages
    IMAGE_ARCH_PREFIX: "arm64--"
  only:
    - //@tezos/opam-repository
    - //@nomadic-labs/opam-repository
  tags:
    - arm64

# The job is triggered both when merging, and when developing
# on Nomadic Labs' repository.
# (Forks don't have the capacity to build arm64 images
# and thus they don't have the capacity to merge the manifest either.)
merge-manifest:
  stage: publish
  extends:
    - .image_template__docker
  needs:
    - build-amd64
    - build-arm64
  script:
    - . ./scripts/version.sh
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - docker manifest create "${CI_REGISTRY_IMAGE}:runtime-dependencies--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-dependencies--amd64--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-dependencies--arm64--${CI_COMMIT_SHA}"
    - docker manifest push "${CI_REGISTRY_IMAGE}:runtime-dependencies--${CI_COMMIT_SHA}"
    - docker manifest create "${CI_REGISTRY_IMAGE}:runtime-prebuild-dependencies--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-prebuild-dependencies--amd64--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-prebuild-dependencies--arm64--${CI_COMMIT_SHA}"
    - docker manifest push "${CI_REGISTRY_IMAGE}:runtime-prebuild-dependencies--${CI_COMMIT_SHA}"
    - docker manifest create "${CI_REGISTRY_IMAGE}:runtime-build-dependencies--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-build-dependencies--amd64--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-build-dependencies--arm64--${CI_COMMIT_SHA}"
    - docker manifest push "${CI_REGISTRY_IMAGE}:runtime-build-dependencies--${CI_COMMIT_SHA}"
    - docker manifest create "${CI_REGISTRY_IMAGE}:runtime-build-test-dependencies--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-build-test-dependencies--amd64--${CI_COMMIT_SHA}"
      --amend "${CI_REGISTRY_IMAGE}:runtime-build-test-dependencies--arm64--${CI_COMMIT_SHA}"
    - docker manifest push "${CI_REGISTRY_IMAGE}:runtime-build-test-dependencies--${CI_COMMIT_SHA}"
  only:
    - //@tezos/opam-repository
    - //@nomadic-labs/opam-repository

# this is a duplicated job to allow fork to build amd64
build:
  <<: *build-definition
  variables:
    ARCH: "x86_64"
    # this variable is empty as we don't want to merge any manifest
    IMAGE_ARCH_PREFIX: ""
  except:
    - //@tezos/opam-repository
    - //@nomadic-labs/opam-repository
