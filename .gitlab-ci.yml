---
stages:
  - lint
  - build
  - publish
  - mirror

# Match GitLab executors Docker version and directly use the Docker socket
# The Docker daemon is already configured, experimental features are enabled
# The following environment variables are already set:
# - BUILDKIT_PROGRESS
# - DOCKER_DRIVER
# - DOCKER_VERSION
# https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-socket-binding
.image_template__docker:
  # https://gitlab.com/tezos/docker-images/ci-docker
  image: "${CI_REGISTRY}/tezos/docker-images/ci-docker:v1.4.0"
  before_script:
    # Credentials for Docker registries
    - ./scripts/docker_registry_auth.sh

# Build template is used by all build jobs
# Variables needs to be set properly
.build-template: &build-definition
  stage: build
  extends:
    - .image_template__docker
  variables:
    ARCH: ""               # Used by `scripts/build-libusb-hidapi.sh` to build static packages
    IMAGE_ARCH_PREFIX: ""  # Used for Docker image tags
    TARGETARCH: ""         # Docker build argument for architecture specific instructions
  script:
    - . ./scripts/version.sh
    # Build docker images
    - ./scripts/create_docker_image.sh "${CI_REGISTRY_IMAGE}" "${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}" "${ARCH}" "${TARGETARCH}"
    # Push docker images
    - ./scripts/docker_push_all.sh "${IMAGE_ARCH_PREFIX}${CI_COMMIT_SHA}"

# this step checks that all docker spec files using the tool hadolint
hadolint:
  image: hadolint/hadolint:v2.10.0-debian
  stage: lint
  script:
    - hadolint *Dockerfile

# this step checks that all scripts pass shellcheck
shellcheck:
  image: koalaman/shellcheck-alpine:v0.8.0
  stage: lint
  script:
    - shellcheck -x scripts/*.sh

# this job builds the build docker images for amd64
build-amd64:
  <<: *build-definition
  variables:
    ARCH: "x86_64"
    IMAGE_ARCH_PREFIX: "amd64--"
    TARGETARCH: "amd64"
  only:
    - //@tezos/opam-repository
    - //@nomadic-labs/opam-repository

# this job builds the build docker images for arm64
# but the job is restricted to nomadic labs and arm64
# it is used for development
build-arm64:
  <<: *build-definition
  variables:
    ARCH: "aarch64"
    IMAGE_ARCH_PREFIX: "arm64--"
    TARGETARCH: "arm64"
  only:
    - //@tezos/opam-repository
    - //@nomadic-labs/opam-repository
  tags:
    - arm64

# The job is triggered both when merging, and when developing
# on Nomadic Labs' repository.
# (Forks don't have the capacity to build arm64 images
# and thus they don't have the capacity to merge the manifest either.)
manifest:
  stage: publish
  extends:
    - .image_template__docker
  script:
    - ./scripts/docker_merge_manifests.sh
  only:
    - //@tezos/opam-repository
    - //@nomadic-labs/opam-repository

# Mirror Docker image from Gitlab container registry @GCP to private ECR @AWS,
# closer to GitLab runners/executors. Requires environment variables to be set
# with AWS credentials and AWS_ECR.
mirror:
  stage: mirror
  extends:
    - .image_template__docker
  variables:
    AWS_ECR_IMAGE: "${AWS_ECR}/${CI_PROJECT_PATH}"
  script:
    - ./scripts/mirror_to_ecr.sh
  only:
    variables:
      # Only available on protected branches @nomadic-labs/opam-repository
      - $AWS_ACCESS_KEY_ID && $AWS_SECRET_ACCESS_KEY && $AWS_ECR

# this is a duplicated job to allow fork to build amd64
build:
  <<: *build-definition
  image: docker:20
  services:
    - name: docker:20-dind
      command: ["--experimental"]
  variables:
    ARCH: "x86_64"
    # this variable is empty as we don't want to merge any manifest
    IMAGE_ARCH_PREFIX: ""
  except:
    - //@tezos/opam-repository
    - //@nomadic-labs/opam-repository
